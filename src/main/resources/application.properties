


# \u8BBE\u7F6Elogback
# \u65E5\u5FD7\u7EA7\u522B \u4ECE\u9AD8\u5230\u5E95 \u7684\u987A\u5E8F\u662F\uFF1A error -> warn -> info -> debug
log.level=info
logging.config=classpath:logback-dev.xml


mybatis.mapper-locations=classpath*:mapper/*.xml


server.port=8080

# \u613F\u6570\u636E\u5E93\u94FE\u63A5
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://10.0.193.128:3306/shard0
#spring.datasource.username=root
#spring.datasource.password=root

# \u5B9A\u4E49\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.datasource.names=shard0,shard1

# \u6570\u636E\u6E90shard0
spring.shardingsphere.datasource.shard0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.shard0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.shard0.url=jdbc:mysql://10.0.193.128:3306/shard0
spring.shardingsphere.datasource.shard0.username=root
spring.shardingsphere.datasource.shard0.password=root
# \u6570\u636E\u6E90shard1
spring.shardingsphere.datasource.shard1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.shard1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.shard1.url=jdbc:mysql://10.0.193.128:3306/shard1
spring.shardingsphere.datasource.shard1.username=root
spring.shardingsphere.datasource.shard1.password=root

# \u9ED8\u8BA4 \u5206\u5E93 \u89C4\u5219\uFF0C\u5982\u679C\u67D0\u4E2A\u8868\u6CA1\u6709\u914D\u7F6E \u5219\u9ED8\u8BA4\u4F7F\u7528 \u8BE5\u89C4\u5219\uFF0C\u5F55\u5165 userinfo \u5C31\u6CA1\u6709\u914D\u7F6E \u5206\u5E93\u8D1F\u8D23\uFF0C\u9ED8\u8BA4 \u6539\u4E3A\u5219\u3002
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=shard$->{user_id % 2}

# \u5B9A\u4E49 \u865A\u62DF\u8868\u7684 \u8282\u70B9
spring.shardingsphere.sharding.tables.user_info.actual-data-nodes=shard$->{0..1}.user_info
# \u5B9A\u4E49 \u5206\u8868 \u5B57\u6BB5
spring.shardingsphere.sharding.tables.user_info.table-strategy.inline.sharding-column=user_id
# \u5B9A\u4E49 \u5206\u8868 \u884C\u5185\u89C4\u5219
spring.shardingsphere.sharding.tables.user_info.table-strategy.inline.algorithm-expression=user_info


# \u5B9A\u4E49 order\u865A\u62DF\u8282\u70B9  \u7684 \u5E93\u548C\u8868
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=shard$->{0..1}.t_order$->{0..1}
# \u5B9A\u4E49 \u5206\u5E93  \u5B57\u6BB5 \uFF08\u6CA1\u6709\u5B9A\u4E49\u6309\u7167 \u4E0A\u9762 \u9ED8\u8BA4\u5206\u5E93\u5B57\u6BB5\uFF09
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=order_id
# \u5B9A\u4E49 \u5206\u5E93\u89C4\u5219 \uFF08\u6CA1\u6709\u5B9A\u4E49\u6309\u7167 \u4E0A\u9762 \u9ED8\u8BA4\u5206\u5E93\u89C4\u5219\uFF09
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=shard$->{order_id % 2}
# \u5B9A\u4E49 \u5206\u8868 \u5B57\u6BB5
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#\u5B9A\u4E49 \u5206\u8868 \u89C4\u5219
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}

spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=shard$->{0..1}.t_order_item$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

# \u6253\u5F00\u67E5\u8BE2sql
spring.shardingsphere.props.sql.show=true